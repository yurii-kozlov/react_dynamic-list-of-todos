{"version":3,"sources":["components/Loader/Loader.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Loader","className","TodoList","props","filteredTodos","selectedTodo","selectedTodoId","loading","map","todo","id","completed","title","type","onClick","TodoFilter","setFilter","filter","query","setQuery","value","onChange","event","target","placeholder","style","pointerEvents","length","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","setTodoId","useState","user","setUser","useEffect","userId","undefined","userItem","href","email","name","App","todosFromServer","setTodosFromServer","todoId","setLoading","find","toLowerCase","includes","todos","finally","ReactDOM","render","document","getElementById"],"mappings":"4PAGaA,EAAmB,kBAC9B,qBAAKC,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,uBCONC,EAA4B,SAACC,GACxC,IACEC,EACED,EADFC,cAAeC,EACbF,EADaE,aAAcC,EAC3BH,EAD2BG,eAAgBC,EAC3CJ,EAD2CI,QAG/C,OAEE,wBAAON,UAAU,+BAAjB,UACE,gCACE,+BACE,uCACA,6BACE,sBAAMA,UAAU,OAAhB,SACE,mBAAGA,UAAU,qBAGjB,uCACA,wCAIJ,gCACGG,EAAcI,KAAI,SAACC,GAClB,OACEF,EACI,cAAC,EAAD,IAEA,qBAEE,UAAQ,OACRN,UAAWA,IAAUI,GAChBA,EAAaK,KAAOD,EAAKC,IACzB,6BALP,UAOE,oBAAIT,UAAU,eAAd,SAA8BQ,EAAKC,KACnC,oBAAIT,UAAU,eAAd,SACGQ,EAAKE,WACJ,sBAAMV,UAAU,OAAO,UAAQ,gBAA/B,SACE,mBAAGA,UAAU,qBAInB,oBAAIA,UAAU,2BAAd,SACE,mBAAGA,UAAWA,IAAUQ,EAAKE,UACzB,mBACA,mBAFJ,SAIIF,EAAKG,UAGX,oBAAIX,UAAU,8BAAd,SACE,wBACE,UAAQ,eACRA,UAAU,SACVY,KAAK,SACLC,QAAS,kBAAMR,EAAeG,EAAKC,KAJrC,SAME,sBAAMT,UAAU,OAAhB,SACE,mBAAGA,UAAWA,KAAsB,OAAZI,QAAY,IAAZA,OAAA,EAAAA,EAAcK,MAAOD,EAAKC,GAC9C,mBACA,wBAhCLD,EAAKC,aCjCfK,EAA8B,SAAC,GAErC,IADLC,EACI,EADJA,UAAWC,EACP,EADOA,OAAQC,EACf,EADeA,MAAOC,EACtB,EADsBA,SAc1B,OACE,uBAAMlB,UAAU,mBAAhB,UACE,mBAAGA,UAAU,UAAb,SACE,sBAAMA,UAAU,SAAhB,SACE,yBACE,UAAQ,eACRmB,MAAOH,EACPI,SAfW,SAACC,GACpBN,EAAUM,EAAMC,OAAOH,QAWjB,UAKE,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,YAAd,8BAKN,oBAAGnB,UAAU,qDAAb,UACE,uBACE,UAAQ,cACRY,KAAK,OACLZ,UAAU,QACVuB,YAAY,YACZJ,MAAOF,EACPG,SAnCY,SAACC,GACnBH,EAASG,EAAMC,OAAOH,UAoClB,sBAAMnB,UAAU,eAAhB,SACE,mBAAGA,UAAU,8BAGf,sBAAMA,UAAU,gBAAgBwB,MAAO,CAAEC,cAAe,OAAxD,SAEGR,EAAMS,OAAS,GAEd,wBACEb,QAtCQ,WAClBK,EAAS,KAsCC,UAAQ,oBACRN,KAAK,SACLZ,UAAU,oBC/CxB,SAAS2B,EAAOC,GAEd,IARYC,EAQNC,EAVS,iEAUYF,EAAM,QAEjC,OAVYC,EAUA,IATL,IAAIE,SAAQ,SAAAC,GACjBC,WAAWD,EAASH,OASnBK,MAAK,kBAAMC,MAAML,MACjBI,MAAK,SAAAE,GAAG,OAAIA,EAAIC,UAGd,ICTMC,EAA6B,SAAC,GAAiC,IAA/BlC,EAA8B,EAA9BA,aAAcmC,EAAgB,EAAhBA,UACzD,EAAwBC,mBAAsB,MAA9C,mBAAOC,EAAP,KAAaC,EAAb,KAYA,OAPAC,qBAAU,WDKW,IAACC,OCJCC,IAAjBzC,IDIgBwC,ECHVxC,EAAawC,ODGgBjB,EAAG,iBAAiBiB,KCFtDV,MAAK,SAACY,GAAD,OAAcJ,EAAQI,QAE/B,IAGD,sBAAK9C,UAAU,kBAAkB,UAAQ,QAAzC,UACE,qBAAKA,UAAU,qBAEG,OAAjBI,GAAkC,OAATqC,EACxB,cAAC,EAAD,IAEA,sBAAKzC,UAAU,aAAf,UACE,yBAAQA,UAAU,kBAAlB,UACE,qBACEA,UAAU,0CACV,UAAQ,eAFV,yBAIYI,EAAaK,MAIzB,wBACEG,KAAK,SACLZ,UAAU,SACV,UAAQ,cACRa,QAhCQ,WAClB0B,EAAU,SAmCJ,sBAAKvC,UAAU,kBAAf,UACE,mBAAGA,UAAU,QAAQ,UAAQ,cAA7B,SACGI,EAAaO,QAGhB,oBAAGX,UAAU,QAAQ,UAAQ,aAA7B,UACE,wBACEA,UAAWA,IAAUI,EAAaM,UAC9B,mBACA,mBAHN,SAKGN,EAAaM,UAAY,OAAS,YAGpC,OAED,mBAAGqC,KAAI,iBAAYN,EAAKO,OAAxB,SACGP,EAAKQ,oBCvDTC,EAAgB,WAC3B,MAA8CV,mBAAiB,IAA/D,mBAAOW,EAAP,KAAwBC,EAAxB,KACA,EAA4BZ,mBAAS,OAArC,mBAAOxB,EAAP,KAAeD,EAAf,KACA,EAA0ByB,mBAAS,IAAnC,mBAAOvB,EAAP,KAAcC,EAAd,KACA,EAA4BsB,mBAAS,GAArC,mBAAOa,EAAP,KAAed,EAAf,KACA,EAA8BC,oBAAS,GAAvC,mBAAOlC,EAAP,KAAgBgD,EAAhB,KAEMlD,EAAe+C,EAAgBI,MAAK,SAAA/C,GAAI,OAAIA,EAAKC,KAAO4C,KACxDlD,EAAgBgD,EAAgBnC,QAAO,SAAAR,GAAI,OAAIA,EAAKG,MAAM6C,cAAcC,SAASxC,EAAMuC,kBAC1FxC,QAAO,SAAAR,GACN,OAAQQ,GACN,IAAK,SACH,OAAQR,EAAKE,UAEf,IAAK,YACH,OAAOF,EAAKE,UAEd,QACE,OAAOF,MAUf,OANAmC,qBAAU,WFbkBhB,EAAY,UEenCO,MAAK,SAACwB,GAAD,OAAmBN,EAAmBM,MAC3CC,SAAQ,kBAAML,GAAW,SAI5B,qCACE,qBAAKtD,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,oBAEA,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,CACEe,UAAWA,EACXC,OAAQA,EACRC,MAAOA,EACPC,SAAUA,MAId,sBAAKlB,UAAU,QAAf,UACE,cAAC,EAAD,CACEG,cAAeA,EACfE,eAAgBkC,EAChBnC,aAAcA,EACdE,QAASA,IAEVA,GAAW,cAAC,EAAD,cAMlBF,GACA,cAAC,EAAD,CACEA,aAAcA,EACdmC,UAAWA,QCrErBqB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a7b6b6a1.chunk.js","sourcesContent":["import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport className from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  selectedTodoId: (v: number) => void,\n  selectedTodo: Todo | undefined,\n  filteredTodos: Todo[]\n  loading: boolean\n};\n\nexport const TodoList: React.FC<Props> = (props) => {\n  const {\n    filteredTodos, selectedTodo, selectedTodoId, loading,\n  } = props;\n\n  return (\n\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>Title</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {filteredTodos.map((todo) => {\n          return (\n            loading\n              ? <Loader />\n              : (\n                <tr\n                  key={todo.id}\n                  data-cy=\"todo\"\n                  className={className(selectedTodo\n                    && selectedTodo.id === todo.id\n                    && 'has-background-info-light')}\n                >\n                  <td className=\"is-vcentered\">{todo.id}</td>\n                  <td className=\"is-vcentered\">\n                    {todo.completed && (\n                      <span className=\"icon\" data-cy=\"iconCompleted\">\n                        <i className=\"fas fa-check\" />\n                      </span>\n                    )}\n                  </td>\n                  <td className=\"is-vcentered is-expanded\">\n                    <p className={className(todo.completed\n                      ? 'has-text-success'\n                      : 'has-text-danger')}\n                    >\n                      { todo.title }\n                    </p>\n                  </td>\n                  <td className=\"has-text-right is-vcentered\">\n                    <button\n                      data-cy=\"selectButton\"\n                      className=\"button\"\n                      type=\"button\"\n                      onClick={() => selectedTodoId(todo.id)}\n                    >\n                      <span className=\"icon\">\n                        <i className={className(selectedTodo?.id === todo.id\n                          ? 'far fa-eye-slash'\n                          : 'far fa-eye')}\n                        />\n                      </span>\n                    </button>\n                  </td>\n                </tr>\n              )\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","type Props = {\n  setFilter: (v: string) => void,\n  filter: string,\n  query: string,\n  setQuery: (v: string) => void\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  setFilter, filter, query, setQuery,\n}) => {\n  const handleQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n  };\n\n  const handleFilter = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setFilter(event.target.value);\n  };\n\n  const handleClear = () => {\n    setQuery('');\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filter}\n            onChange={handleFilter}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleQuery}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n\n          {query.length > 0 && (\n            // eslint-disable-next-line jsx-a11y/control-has-associated-label\n            <button\n              onClick={handleClear}\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport className from 'classnames';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ntype Props = {\n  selectedTodo: Todo,\n  setTodoId: (v: number) => void\n};\n\nexport const TodoModal: React.FC<Props> = ({ selectedTodo, setTodoId }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const handleClose = () => {\n    setTodoId(0);\n  };\n\n  useEffect(() => {\n    if (selectedTodo !== undefined) {\n      getUser(selectedTodo.userId)\n        .then((userItem) => setUser(userItem));\n    }\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {selectedTodo === null || user === null ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={handleClose}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              <strong\n                className={className(selectedTodo.completed\n                  ? 'has-text-success'\n                  : 'has-text-danger')}\n              >\n                {selectedTodo.completed ? 'Done' : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [todosFromServer, setTodosFromServer] = useState<Todo[]>([]);\n  const [filter, setFilter] = useState('all');\n  const [query, setQuery] = useState('');\n  const [todoId, setTodoId] = useState(0);\n  const [loading, setLoading] = useState(true);\n\n  const selectedTodo = todosFromServer.find(todo => todo.id === todoId);\n  const filteredTodos = todosFromServer.filter(todo => todo.title.toLowerCase().includes(query.toLowerCase()))\n    .filter(todo => {\n      switch (filter) {\n        case 'active':\n          return !todo.completed;\n\n        case 'completed':\n          return todo.completed;\n\n        default:\n          return todo;\n      }\n    });\n\n  useEffect(() => {\n    getTodos()\n      .then((todos: Todo[]) => setTodosFromServer(todos))\n      .finally(() => setLoading(false));\n  });\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                setFilter={setFilter}\n                filter={filter}\n                query={query}\n                setQuery={setQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              <TodoList\n                filteredTodos={filteredTodos}\n                selectedTodoId={setTodoId}\n                selectedTodo={selectedTodo}\n                loading={loading}\n              />\n              {loading && <Loader />}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      { selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          setTodoId={setTodoId}\n        />\n      )}\n\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}